// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `unity.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace vsm
{
    namespace unity
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1012")]
        public abstract partial class VSSoldier : vsm.VSObject, VSSoldierOperations_, VSSoldierOperationsNC_
        {
            #region Slice operations

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public void move(vsm.VSDirection direction)
            {
                move(direction, Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract void move(vsm.VSDirection direction, Ice.Current current__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public void run(bool isRunning)
            {
                run(isRunning, Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract void run(bool isRunning, Ice.Current current__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public void crounch()
            {
                crounch(Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract void crounch(Ice.Current current__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public vsm.VSVector3 getPosition()
            {
                return getPosition(Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract vsm.VSVector3 getPosition(Ice.Current current__);

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::vsm::VSObject",
                "::vsm::unity::VSSoldier"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string ice_id()
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static new string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus move___(VSSoldier obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.istr();
                is__.startReadEncaps();
                vsm.VSDirection direction;
                direction = (vsm.VSDirection)is__.readByte(4);
                is__.endReadEncaps();
                obj__.move(direction, current__);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus run___(VSSoldier obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.istr();
                is__.startReadEncaps();
                bool isRunning;
                isRunning = is__.readBool();
                is__.endReadEncaps();
                obj__.run(isRunning, current__);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus crounch___(VSSoldier obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.istr().skipEmptyEncaps();
                obj__.crounch(current__);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus getPosition___(VSSoldier obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.istr().skipEmptyEncaps();
                IceInternal.BasicStream os__ = inS__.ostr();
                vsm.VSVector3 ret__ = obj__.getPosition(current__);
                ret__.write__(os__);
                return Ice.DispatchStatus.DispatchOK;
            }

            private static string[] all__ =
            {
                "crounch",
                "getPosition",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping",
                "move",
                "run"
            };
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]

            public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
            {
                int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return crounch___(this, inS__, current__);
                    }
                    case 1:
                    {
                        return getPosition___(this, inS__, current__);
                    }
                    case 2:
                    {
                        return ice_id___(this, inS__, current__);
                    }
                    case 3:
                    {
                        return ice_ids___(this, inS__, current__);
                    }
                    case 4:
                    {
                        return ice_isA___(this, inS__, current__);
                    }
                    case 5:
                    {
                        return ice_ping___(this, inS__, current__);
                    }
                    case 6:
                    {
                        return move___(this, inS__, current__);
                    }
                    case 7:
                    {
                        return run___(this, inS__, current__);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void write__(IceInternal.BasicStream os__)
            {
                os__.writeTypeId(ice_staticId());
                os__.startWriteSlice();
                os__.endWriteSlice();
                base.write__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void read__(IceInternal.BasicStream is__, bool rid__)
            {
                if(rid__)
                {
                    /* string myId = */ is__.readTypeId();
                }
                is__.startReadSlice();
                is__.endReadSlice();
                base.read__(is__, true);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void write__(Ice.OutputStream outS__)
            {
                Ice.MarshalException ex = new Ice.MarshalException();
                ex.reason = "type vsm::unity::VSSoldier was not generated with stream support";
                throw ex;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void read__(Ice.InputStream inS__, bool rid__)
            {
                Ice.MarshalException ex = new Ice.MarshalException();
                ex.reason = "type vsm::unity::VSSoldier was not generated with stream support";
                throw ex;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1012")]
        public abstract partial class VSUnity : vsm.VSObject, VSUnityOperations_, VSUnityOperationsNC_, vsm.network.VSClient
        {
            #region Slice operations

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public int getPlayersNumber()
            {
                return getPlayersNumber(Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract int getPlayersNumber(Ice.Current current__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public vsm.unity.VSSoldierPrx getSoldier(int playerNumber)
            {
                return getSoldier(playerNumber, Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract vsm.unity.VSSoldierPrx getSoldier(int playerNumber, Ice.Current current__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public vsm.unity.VSSoldierPrx instantiateSoldier()
            {
                return instantiateSoldier(Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract vsm.unity.VSSoldierPrx instantiateSoldier(Ice.Current current__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public void destroySoldier(vsm.unity.VSSoldierPrx solider)
            {
                destroySoldier(solider, Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract void destroySoldier(vsm.unity.VSSoldierPrx solider, Ice.Current current__);

            #endregion

            #region Inherited Slice operations

            public vsm.network.ClientType getClientType()
            {
                return getClientType(Ice.ObjectImpl.defaultCurrent);
            }

            public abstract vsm.network.ClientType getClientType(Ice.Current current__);

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::vsm::VSObject",
                "::vsm::network::VSClient",
                "::vsm::unity::VSUnity"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string ice_id()
            {
                return ids__[3];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[3];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static new string ice_staticId()
            {
                return ids__[3];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus getPlayersNumber___(VSUnity obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.istr().skipEmptyEncaps();
                IceInternal.BasicStream os__ = inS__.ostr();
                int ret__ = obj__.getPlayersNumber(current__);
                os__.writeInt(ret__);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus getSoldier___(VSUnity obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.istr();
                is__.startReadEncaps();
                int playerNumber;
                playerNumber = is__.readInt();
                is__.endReadEncaps();
                IceInternal.BasicStream os__ = inS__.ostr();
                vsm.unity.VSSoldierPrx ret__ = obj__.getSoldier(playerNumber, current__);
                vsm.unity.VSSoldierPrxHelper.write__(os__, ret__);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus instantiateSoldier___(VSUnity obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.istr().skipEmptyEncaps();
                IceInternal.BasicStream os__ = inS__.ostr();
                vsm.unity.VSSoldierPrx ret__ = obj__.instantiateSoldier(current__);
                vsm.unity.VSSoldierPrxHelper.write__(os__, ret__);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus destroySoldier___(VSUnity obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.istr();
                is__.startReadEncaps();
                vsm.unity.VSSoldierPrx solider;
                solider = vsm.unity.VSSoldierPrxHelper.read__(is__);
                is__.endReadEncaps();
                obj__.destroySoldier(solider, current__);
                return Ice.DispatchStatus.DispatchOK;
            }

            private static string[] all__ =
            {
                "destroySoldier",
                "getClientType",
                "getPlayersNumber",
                "getSoldier",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping",
                "instantiateSoldier"
            };
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]

            public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
            {
                int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return destroySoldier___(this, inS__, current__);
                    }
                    case 1:
                    {
                        return vsm.network.VSClientDisp_.getClientType___(this, inS__, current__);
                    }
                    case 2:
                    {
                        return getPlayersNumber___(this, inS__, current__);
                    }
                    case 3:
                    {
                        return getSoldier___(this, inS__, current__);
                    }
                    case 4:
                    {
                        return ice_id___(this, inS__, current__);
                    }
                    case 5:
                    {
                        return ice_ids___(this, inS__, current__);
                    }
                    case 6:
                    {
                        return ice_isA___(this, inS__, current__);
                    }
                    case 7:
                    {
                        return ice_ping___(this, inS__, current__);
                    }
                    case 8:
                    {
                        return instantiateSoldier___(this, inS__, current__);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void write__(IceInternal.BasicStream os__)
            {
                os__.writeTypeId(ice_staticId());
                os__.startWriteSlice();
                os__.endWriteSlice();
                base.write__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void read__(IceInternal.BasicStream is__, bool rid__)
            {
                if(rid__)
                {
                    /* string myId = */ is__.readTypeId();
                }
                is__.startReadSlice();
                is__.endReadSlice();
                base.read__(is__, true);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void write__(Ice.OutputStream outS__)
            {
                Ice.MarshalException ex = new Ice.MarshalException();
                ex.reason = "type vsm::unity::VSUnity was not generated with stream support";
                throw ex;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void read__(Ice.InputStream inS__, bool rid__)
            {
                Ice.MarshalException ex = new Ice.MarshalException();
                ex.reason = "type vsm::unity::VSUnity was not generated with stream support";
                throw ex;
            }

            #endregion
        }
    }
}

namespace vsm
{
    namespace unity
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSSoldier_move();

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSSoldier_run();

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSSoldier_crounch();

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSSoldier_getPosition(vsm.VSVector3 ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSUnity_getPlayersNumber(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSUnity_getSoldier(vsm.unity.VSSoldierPrx ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSUnity_instantiateSoldier(vsm.unity.VSSoldierPrx ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSUnity_destroySoldier();
    }
}

namespace vsm
{
    namespace unity
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSSoldierPrx : vsm.VSObjectPrx
        {
            void move(vsm.VSDirection direction);
            void move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.unity.Callback_VSSoldier_move> begin_move(vsm.VSDirection direction);
            Ice.AsyncResult<vsm.unity.Callback_VSSoldier_move> begin_move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_move(vsm.VSDirection direction, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_move(Ice.AsyncResult r__);

            void run(bool isRunning);
            void run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.unity.Callback_VSSoldier_run> begin_run(bool isRunning);
            Ice.AsyncResult<vsm.unity.Callback_VSSoldier_run> begin_run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_run(bool isRunning, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_run(Ice.AsyncResult r__);

            void crounch();
            void crounch(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.unity.Callback_VSSoldier_crounch> begin_crounch();
            Ice.AsyncResult<vsm.unity.Callback_VSSoldier_crounch> begin_crounch(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_crounch(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_crounch(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_crounch(Ice.AsyncResult r__);

            vsm.VSVector3 getPosition();
            vsm.VSVector3 getPosition(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.unity.Callback_VSSoldier_getPosition> begin_getPosition();
            Ice.AsyncResult<vsm.unity.Callback_VSSoldier_getPosition> begin_getPosition(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_getPosition(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_getPosition(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            vsm.VSVector3 end_getPosition(Ice.AsyncResult r__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSUnityPrx : vsm.VSObjectPrx, vsm.network.VSClientPrx
        {
            int getPlayersNumber();
            int getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.unity.Callback_VSUnity_getPlayersNumber> begin_getPlayersNumber();
            Ice.AsyncResult<vsm.unity.Callback_VSUnity_getPlayersNumber> begin_getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_getPlayersNumber(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_getPlayersNumber(Ice.AsyncResult r__);

            vsm.unity.VSSoldierPrx getSoldier(int playerNumber);
            vsm.unity.VSSoldierPrx getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.unity.Callback_VSUnity_getSoldier> begin_getSoldier(int playerNumber);
            Ice.AsyncResult<vsm.unity.Callback_VSUnity_getSoldier> begin_getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_getSoldier(int playerNumber, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            vsm.unity.VSSoldierPrx end_getSoldier(Ice.AsyncResult r__);

            vsm.unity.VSSoldierPrx instantiateSoldier();
            vsm.unity.VSSoldierPrx instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.unity.Callback_VSUnity_instantiateSoldier> begin_instantiateSoldier();
            Ice.AsyncResult<vsm.unity.Callback_VSUnity_instantiateSoldier> begin_instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_instantiateSoldier(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            vsm.unity.VSSoldierPrx end_instantiateSoldier(Ice.AsyncResult r__);

            void destroySoldier(vsm.unity.VSSoldierPrx solider);
            void destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.unity.Callback_VSUnity_destroySoldier> begin_destroySoldier(vsm.unity.VSSoldierPrx solider);
            Ice.AsyncResult<vsm.unity.Callback_VSUnity_destroySoldier> begin_destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_destroySoldier(vsm.unity.VSSoldierPrx solider, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_destroySoldier(Ice.AsyncResult r__);
        }
    }
}

namespace vsm
{
    namespace unity
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSSoldierOperations_
        {
            void move(vsm.VSDirection direction, Ice.Current current__);

            void run(bool isRunning, Ice.Current current__);

            void crounch(Ice.Current current__);

            vsm.VSVector3 getPosition(Ice.Current current__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSSoldierOperationsNC_
        {
            void move(vsm.VSDirection direction);

            void run(bool isRunning);

            void crounch();

            vsm.VSVector3 getPosition();
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSUnityOperations_ : vsm.network.VSClientOperations_
        {
            int getPlayersNumber(Ice.Current current__);

            vsm.unity.VSSoldierPrx getSoldier(int playerNumber, Ice.Current current__);

            vsm.unity.VSSoldierPrx instantiateSoldier(Ice.Current current__);

            void destroySoldier(vsm.unity.VSSoldierPrx solider, Ice.Current current__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSUnityOperationsNC_ : vsm.network.VSClientOperationsNC_
        {
            int getPlayersNumber();

            vsm.unity.VSSoldierPrx getSoldier(int playerNumber);

            vsm.unity.VSSoldierPrx instantiateSoldier();

            void destroySoldier(vsm.unity.VSSoldierPrx solider);
        }
    }
}

namespace vsm
{
    namespace unity
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSSoldierPrxHelper : Ice.ObjectPrxHelperBase, VSSoldierPrx
        {
            #region Synchronous operations

            public void crounch()
            {
                crounch(null, false);
            }

            public void crounch(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                crounch(context__, true);
            }

            private void crounch(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        VSSoldierDel_ del__ = (VSSoldierDel_)delBase__;
                        del__.crounch(context__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            public vsm.VSVector3 getPosition()
            {
                return getPosition(null, false);
            }

            public vsm.VSVector3 getPosition(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return getPosition(context__, true);
            }

            private vsm.VSVector3 getPosition(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__("getPosition");
                        delBase__ = getDelegate__(false);
                        VSSoldierDel_ del__ = (VSSoldierDel_)delBase__;
                        return del__.getPosition(context__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            public void move(vsm.VSDirection direction)
            {
                move(direction, null, false);
            }

            public void move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                move(direction, context__, true);
            }

            private void move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        VSSoldierDel_ del__ = (VSSoldierDel_)delBase__;
                        del__.move(direction, context__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            public void run(bool isRunning)
            {
                run(isRunning, null, false);
            }

            public void run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                run(isRunning, context__, true);
            }

            private void run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        VSSoldierDel_ del__ = (VSSoldierDel_)delBase__;
                        del__.run(isRunning, context__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<vsm.unity.Callback_VSSoldier_crounch> begin_crounch()
            {
                return begin_crounch(null, false, null, null);
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSSoldier_crounch> begin_crounch(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_crounch(ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_crounch(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_crounch(null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_crounch(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_crounch(ctx__, true, cb__, cookie__);
            }

            private const string __crounch_name = "crounch";

            public void end_crounch(Ice.AsyncResult r__)
            {
                end__(r__, __crounch_name);
            }

            private Ice.AsyncResult<vsm.unity.Callback_VSSoldier_crounch> begin_crounch(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<vsm.unity.Callback_VSSoldier_crounch> result__ = new IceInternal.OnewayOutgoingAsync<vsm.unity.Callback_VSSoldier_crounch>(this, __crounch_name, crounch_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__crounch_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void crounch_completed__(vsm.unity.Callback_VSSoldier_crounch cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSSoldier_getPosition> begin_getPosition()
            {
                return begin_getPosition(null, false, null, null);
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSSoldier_getPosition> begin_getPosition(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_getPosition(ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_getPosition(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_getPosition(null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_getPosition(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_getPosition(ctx__, true, cb__, cookie__);
            }

            private const string __getPosition_name = "getPosition";

            public vsm.VSVector3 end_getPosition(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                IceInternal.OutgoingAsync.check__(outAsync__, this, __getPosition_name);
                if(!outAsync__.wait__())
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                vsm.VSVector3 ret__;
                IceInternal.BasicStream is__ = outAsync__.istr__;
                is__.startReadEncaps();
                ret__ = new vsm.VSVector3();
                ret__.read__(is__);
                is__.endReadEncaps();
                return ret__;
            }

            private Ice.AsyncResult<vsm.unity.Callback_VSSoldier_getPosition> begin_getPosition(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__getPosition_name);
                IceInternal.TwowayOutgoingAsync<vsm.unity.Callback_VSSoldier_getPosition> result__ =  new IceInternal.TwowayOutgoingAsync<vsm.unity.Callback_VSSoldier_getPosition>(this, __getPosition_name, getPosition_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__getPosition_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void getPosition_completed__(Ice.AsyncResult r__, vsm.unity.Callback_VSSoldier_getPosition cb__, Ice.ExceptionCallback excb__)
            {
                vsm.VSVector3 ret__;
                try
                {
                    ret__ = end_getPosition(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSSoldier_move> begin_move(vsm.VSDirection direction)
            {
                return begin_move(direction, null, false, null, null);
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSSoldier_move> begin_move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_move(direction, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_move(vsm.VSDirection direction, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_move(direction, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_move(direction, ctx__, true, cb__, cookie__);
            }

            private const string __move_name = "move";

            public void end_move(Ice.AsyncResult r__)
            {
                end__(r__, __move_name);
            }

            private Ice.AsyncResult<vsm.unity.Callback_VSSoldier_move> begin_move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<vsm.unity.Callback_VSSoldier_move> result__ = new IceInternal.OnewayOutgoingAsync<vsm.unity.Callback_VSSoldier_move>(this, __move_name, move_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__move_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    os__.writeByte((byte)direction, 4);
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void move_completed__(vsm.unity.Callback_VSSoldier_move cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSSoldier_run> begin_run(bool isRunning)
            {
                return begin_run(isRunning, null, false, null, null);
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSSoldier_run> begin_run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_run(isRunning, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_run(bool isRunning, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_run(isRunning, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_run(isRunning, ctx__, true, cb__, cookie__);
            }

            private const string __run_name = "run";

            public void end_run(Ice.AsyncResult r__)
            {
                end__(r__, __run_name);
            }

            private Ice.AsyncResult<vsm.unity.Callback_VSSoldier_run> begin_run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<vsm.unity.Callback_VSSoldier_run> result__ = new IceInternal.OnewayOutgoingAsync<vsm.unity.Callback_VSSoldier_run>(this, __run_name, run_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__run_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    os__.writeBool(isRunning);
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void run_completed__(vsm.unity.Callback_VSSoldier_run cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            #endregion

            #region Checked and unchecked cast operations

            public static VSSoldierPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                VSSoldierPrx r = b as VSSoldierPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    VSSoldierPrxHelper h = new VSSoldierPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSSoldierPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                VSSoldierPrx r = b as VSSoldierPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    VSSoldierPrxHelper h = new VSSoldierPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSSoldierPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        VSSoldierPrxHelper h = new VSSoldierPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static VSSoldierPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        VSSoldierPrxHelper h = new VSSoldierPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static VSSoldierPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                VSSoldierPrx r = b as VSSoldierPrx;
                if(r == null)
                {
                    VSSoldierPrxHelper h = new VSSoldierPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSSoldierPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                VSSoldierPrxHelper h = new VSSoldierPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::vsm::VSObject",
                "::vsm::unity::VSSoldier"
            };

            public static string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new VSSoldierDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new VSSoldierDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, VSSoldierPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static VSSoldierPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    VSSoldierPrxHelper result = new VSSoldierPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSUnityPrxHelper : Ice.ObjectPrxHelperBase, VSUnityPrx
        {
            #region Synchronous operations

            public vsm.network.ClientType getClientType()
            {
                return getClientType(null, false);
            }

            public vsm.network.ClientType getClientType(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return getClientType(context__, true);
            }

            private vsm.network.ClientType getClientType(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__("getClientType");
                        delBase__ = getDelegate__(false);
                        VSUnityDel_ del__ = (VSUnityDel_)delBase__;
                        return del__.getClientType(context__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            public void destroySoldier(vsm.unity.VSSoldierPrx solider)
            {
                destroySoldier(solider, null, false);
            }

            public void destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                destroySoldier(solider, context__, true);
            }

            private void destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        VSUnityDel_ del__ = (VSUnityDel_)delBase__;
                        del__.destroySoldier(solider, context__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            public int getPlayersNumber()
            {
                return getPlayersNumber(null, false);
            }

            public int getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return getPlayersNumber(context__, true);
            }

            private int getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__("getPlayersNumber");
                        delBase__ = getDelegate__(false);
                        VSUnityDel_ del__ = (VSUnityDel_)delBase__;
                        return del__.getPlayersNumber(context__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            public vsm.unity.VSSoldierPrx getSoldier(int playerNumber)
            {
                return getSoldier(playerNumber, null, false);
            }

            public vsm.unity.VSSoldierPrx getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return getSoldier(playerNumber, context__, true);
            }

            private vsm.unity.VSSoldierPrx getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__("getSoldier");
                        delBase__ = getDelegate__(false);
                        VSUnityDel_ del__ = (VSUnityDel_)delBase__;
                        return del__.getSoldier(playerNumber, context__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            public vsm.unity.VSSoldierPrx instantiateSoldier()
            {
                return instantiateSoldier(null, false);
            }

            public vsm.unity.VSSoldierPrx instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return instantiateSoldier(context__, true);
            }

            private vsm.unity.VSSoldierPrx instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__("instantiateSoldier");
                        delBase__ = getDelegate__(false);
                        VSUnityDel_ del__ = (VSUnityDel_)delBase__;
                        return del__.instantiateSoldier(context__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<vsm.network.Callback_VSClient_getClientType> begin_getClientType()
            {
                return begin_getClientType(null, false, null, null);
            }

            public Ice.AsyncResult<vsm.network.Callback_VSClient_getClientType> begin_getClientType(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_getClientType(ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_getClientType(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_getClientType(null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_getClientType(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_getClientType(ctx__, true, cb__, cookie__);
            }

            private const string __getClientType_name = "getClientType";

            public vsm.network.ClientType end_getClientType(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                IceInternal.OutgoingAsync.check__(outAsync__, this, __getClientType_name);
                if(!outAsync__.wait__())
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                vsm.network.ClientType ret__;
                IceInternal.BasicStream is__ = outAsync__.istr__;
                is__.startReadEncaps();
                ret__ = (vsm.network.ClientType)is__.readByte(2);
                is__.endReadEncaps();
                return ret__;
            }

            private Ice.AsyncResult<vsm.network.Callback_VSClient_getClientType> begin_getClientType(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__getClientType_name);
                IceInternal.TwowayOutgoingAsync<vsm.network.Callback_VSClient_getClientType> result__ =  new IceInternal.TwowayOutgoingAsync<vsm.network.Callback_VSClient_getClientType>(this, __getClientType_name, getClientType_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__getClientType_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void getClientType_completed__(Ice.AsyncResult r__, vsm.network.Callback_VSClient_getClientType cb__, Ice.ExceptionCallback excb__)
            {
                vsm.network.ClientType ret__;
                try
                {
                    ret__ = end_getClientType(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSUnity_destroySoldier> begin_destroySoldier(vsm.unity.VSSoldierPrx solider)
            {
                return begin_destroySoldier(solider, null, false, null, null);
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSUnity_destroySoldier> begin_destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_destroySoldier(solider, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_destroySoldier(vsm.unity.VSSoldierPrx solider, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_destroySoldier(solider, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_destroySoldier(solider, ctx__, true, cb__, cookie__);
            }

            private const string __destroySoldier_name = "destroySoldier";

            public void end_destroySoldier(Ice.AsyncResult r__)
            {
                end__(r__, __destroySoldier_name);
            }

            private Ice.AsyncResult<vsm.unity.Callback_VSUnity_destroySoldier> begin_destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<vsm.unity.Callback_VSUnity_destroySoldier> result__ = new IceInternal.OnewayOutgoingAsync<vsm.unity.Callback_VSUnity_destroySoldier>(this, __destroySoldier_name, destroySoldier_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__destroySoldier_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    vsm.unity.VSSoldierPrxHelper.write__(os__, solider);
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void destroySoldier_completed__(vsm.unity.Callback_VSUnity_destroySoldier cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSUnity_getPlayersNumber> begin_getPlayersNumber()
            {
                return begin_getPlayersNumber(null, false, null, null);
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSUnity_getPlayersNumber> begin_getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_getPlayersNumber(ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_getPlayersNumber(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_getPlayersNumber(null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_getPlayersNumber(ctx__, true, cb__, cookie__);
            }

            private const string __getPlayersNumber_name = "getPlayersNumber";

            public int end_getPlayersNumber(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                IceInternal.OutgoingAsync.check__(outAsync__, this, __getPlayersNumber_name);
                if(!outAsync__.wait__())
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                int ret__;
                IceInternal.BasicStream is__ = outAsync__.istr__;
                is__.startReadEncaps();
                ret__ = is__.readInt();
                is__.endReadEncaps();
                return ret__;
            }

            private Ice.AsyncResult<vsm.unity.Callback_VSUnity_getPlayersNumber> begin_getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__getPlayersNumber_name);
                IceInternal.TwowayOutgoingAsync<vsm.unity.Callback_VSUnity_getPlayersNumber> result__ =  new IceInternal.TwowayOutgoingAsync<vsm.unity.Callback_VSUnity_getPlayersNumber>(this, __getPlayersNumber_name, getPlayersNumber_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__getPlayersNumber_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void getPlayersNumber_completed__(Ice.AsyncResult r__, vsm.unity.Callback_VSUnity_getPlayersNumber cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_getPlayersNumber(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSUnity_getSoldier> begin_getSoldier(int playerNumber)
            {
                return begin_getSoldier(playerNumber, null, false, null, null);
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSUnity_getSoldier> begin_getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_getSoldier(playerNumber, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_getSoldier(int playerNumber, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_getSoldier(playerNumber, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_getSoldier(playerNumber, ctx__, true, cb__, cookie__);
            }

            private const string __getSoldier_name = "getSoldier";

            public vsm.unity.VSSoldierPrx end_getSoldier(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                IceInternal.OutgoingAsync.check__(outAsync__, this, __getSoldier_name);
                if(!outAsync__.wait__())
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                vsm.unity.VSSoldierPrx ret__;
                IceInternal.BasicStream is__ = outAsync__.istr__;
                is__.startReadEncaps();
                ret__ = vsm.unity.VSSoldierPrxHelper.read__(is__);
                is__.endReadEncaps();
                return ret__;
            }

            private Ice.AsyncResult<vsm.unity.Callback_VSUnity_getSoldier> begin_getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__getSoldier_name);
                IceInternal.TwowayOutgoingAsync<vsm.unity.Callback_VSUnity_getSoldier> result__ =  new IceInternal.TwowayOutgoingAsync<vsm.unity.Callback_VSUnity_getSoldier>(this, __getSoldier_name, getSoldier_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__getSoldier_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    os__.writeInt(playerNumber);
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void getSoldier_completed__(Ice.AsyncResult r__, vsm.unity.Callback_VSUnity_getSoldier cb__, Ice.ExceptionCallback excb__)
            {
                vsm.unity.VSSoldierPrx ret__;
                try
                {
                    ret__ = end_getSoldier(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSUnity_instantiateSoldier> begin_instantiateSoldier()
            {
                return begin_instantiateSoldier(null, false, null, null);
            }

            public Ice.AsyncResult<vsm.unity.Callback_VSUnity_instantiateSoldier> begin_instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_instantiateSoldier(ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_instantiateSoldier(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_instantiateSoldier(null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_instantiateSoldier(ctx__, true, cb__, cookie__);
            }

            private const string __instantiateSoldier_name = "instantiateSoldier";

            public vsm.unity.VSSoldierPrx end_instantiateSoldier(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
                IceInternal.OutgoingAsync.check__(outAsync__, this, __instantiateSoldier_name);
                if(!outAsync__.wait__())
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                vsm.unity.VSSoldierPrx ret__;
                IceInternal.BasicStream is__ = outAsync__.istr__;
                is__.startReadEncaps();
                ret__ = vsm.unity.VSSoldierPrxHelper.read__(is__);
                is__.endReadEncaps();
                return ret__;
            }

            private Ice.AsyncResult<vsm.unity.Callback_VSUnity_instantiateSoldier> begin_instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__instantiateSoldier_name);
                IceInternal.TwowayOutgoingAsync<vsm.unity.Callback_VSUnity_instantiateSoldier> result__ =  new IceInternal.TwowayOutgoingAsync<vsm.unity.Callback_VSUnity_instantiateSoldier>(this, __instantiateSoldier_name, instantiateSoldier_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__instantiateSoldier_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void instantiateSoldier_completed__(Ice.AsyncResult r__, vsm.unity.Callback_VSUnity_instantiateSoldier cb__, Ice.ExceptionCallback excb__)
            {
                vsm.unity.VSSoldierPrx ret__;
                try
                {
                    ret__ = end_instantiateSoldier(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            #endregion

            #region Checked and unchecked cast operations

            public static VSUnityPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                VSUnityPrx r = b as VSUnityPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    VSUnityPrxHelper h = new VSUnityPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSUnityPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                VSUnityPrx r = b as VSUnityPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    VSUnityPrxHelper h = new VSUnityPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSUnityPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        VSUnityPrxHelper h = new VSUnityPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static VSUnityPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        VSUnityPrxHelper h = new VSUnityPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static VSUnityPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                VSUnityPrx r = b as VSUnityPrx;
                if(r == null)
                {
                    VSUnityPrxHelper h = new VSUnityPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSUnityPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                VSUnityPrxHelper h = new VSUnityPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::vsm::VSObject",
                "::vsm::network::VSClient",
                "::vsm::unity::VSUnity"
            };

            public static string ice_staticId()
            {
                return ids__[3];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new VSUnityDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new VSUnityDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, VSUnityPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static VSUnityPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    VSUnityPrxHelper result = new VSUnityPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }
    }
}

namespace vsm
{
    namespace unity
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSSoldierDel_ : vsm.VSObjectDel_
        {
            void move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> context__);

            void run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> context__);

            void crounch(_System.Collections.Generic.Dictionary<string, string> context__);

            vsm.VSVector3 getPosition(_System.Collections.Generic.Dictionary<string, string> context__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSUnityDel_ : vsm.VSObjectDel_, vsm.network.VSClientDel_
        {
            int getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> context__);

            vsm.unity.VSSoldierPrx getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> context__);

            vsm.unity.VSSoldierPrx instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> context__);

            void destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> context__);
        }
    }
}

namespace vsm
{
    namespace unity
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSSoldierDelM_ : Ice.ObjectDelM_, VSSoldierDel_
        {
            public void crounch(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("crounch", Ice.OperationMode.Normal, context__);
                try
                {
                    bool ok__ = og__.invoke();
                    if(!og__.istr().isEmpty())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.istr().skipEmptyEncaps();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public vsm.VSVector3 getPosition(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("getPosition", Ice.OperationMode.Normal, context__);
                try
                {
                    bool ok__ = og__.invoke();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        IceInternal.BasicStream is__ = og__.istr();
                        is__.startReadEncaps();
                        vsm.VSVector3 ret__;
                        ret__ = new vsm.VSVector3();
                        ret__.read__(is__);
                        is__.endReadEncaps();
                        return ret__;
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public void move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("move", Ice.OperationMode.Normal, context__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.ostr();
                        os__.writeByte((byte)direction, 4);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(!og__.istr().isEmpty())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.istr().skipEmptyEncaps();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public void run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("run", Ice.OperationMode.Normal, context__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.ostr();
                        os__.writeBool(isRunning);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(!og__.istr().isEmpty())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.istr().skipEmptyEncaps();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSUnityDelM_ : Ice.ObjectDelM_, VSUnityDel_
        {
            public vsm.network.ClientType getClientType(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("getClientType", Ice.OperationMode.Normal, context__);
                try
                {
                    bool ok__ = og__.invoke();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        IceInternal.BasicStream is__ = og__.istr();
                        is__.startReadEncaps();
                        vsm.network.ClientType ret__;
                        ret__ = (vsm.network.ClientType)is__.readByte(2);
                        is__.endReadEncaps();
                        return ret__;
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public void destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("destroySoldier", Ice.OperationMode.Normal, context__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.ostr();
                        vsm.unity.VSSoldierPrxHelper.write__(os__, solider);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(!og__.istr().isEmpty())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.istr().skipEmptyEncaps();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public int getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("getPlayersNumber", Ice.OperationMode.Normal, context__);
                try
                {
                    bool ok__ = og__.invoke();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        IceInternal.BasicStream is__ = og__.istr();
                        is__.startReadEncaps();
                        int ret__;
                        ret__ = is__.readInt();
                        is__.endReadEncaps();
                        return ret__;
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public vsm.unity.VSSoldierPrx getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("getSoldier", Ice.OperationMode.Normal, context__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.ostr();
                        os__.writeInt(playerNumber);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        IceInternal.BasicStream is__ = og__.istr();
                        is__.startReadEncaps();
                        vsm.unity.VSSoldierPrx ret__;
                        ret__ = vsm.unity.VSSoldierPrxHelper.read__(is__);
                        is__.endReadEncaps();
                        return ret__;
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public vsm.unity.VSSoldierPrx instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("instantiateSoldier", Ice.OperationMode.Normal, context__);
                try
                {
                    bool ok__ = og__.invoke();
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        IceInternal.BasicStream is__ = og__.istr();
                        is__.startReadEncaps();
                        vsm.unity.VSSoldierPrx ret__;
                        ret__ = vsm.unity.VSSoldierPrxHelper.read__(is__);
                        is__.endReadEncaps();
                        return ret__;
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }
        }
    }
}

namespace vsm
{
    namespace unity
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSSoldierDelD_ : Ice.ObjectDelD_, VSSoldierDel_
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void crounch(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "crounch", Ice.OperationMode.Normal, context__);
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSSoldier servant__ = null;
                    try
                    {
                        servant__ = (VSSoldier)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    servant__.crounch(current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public vsm.VSVector3 getPosition(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "getPosition", Ice.OperationMode.Normal, context__);
                vsm.VSVector3 result__ = new vsm.VSVector3();
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSSoldier servant__ = null;
                    try
                    {
                        servant__ = (VSSoldier)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    result__ = servant__.getPosition(current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
                return result__;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void move(vsm.VSDirection direction, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "move", Ice.OperationMode.Normal, context__);
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSSoldier servant__ = null;
                    try
                    {
                        servant__ = (VSSoldier)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    servant__.move(direction, current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void run(bool isRunning, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "run", Ice.OperationMode.Normal, context__);
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSSoldier servant__ = null;
                    try
                    {
                        servant__ = (VSSoldier)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    servant__.run(isRunning, current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
            }
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSUnityDelD_ : Ice.ObjectDelD_, VSUnityDel_
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public vsm.network.ClientType getClientType(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "getClientType", Ice.OperationMode.Normal, context__);
                vsm.network.ClientType result__ = vsm.network.ClientType.UNITY;
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSUnity servant__ = null;
                    try
                    {
                        servant__ = (VSUnity)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    result__ = servant__.getClientType(current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
                return result__;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void destroySoldier(vsm.unity.VSSoldierPrx solider, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "destroySoldier", Ice.OperationMode.Normal, context__);
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSUnity servant__ = null;
                    try
                    {
                        servant__ = (VSUnity)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    servant__.destroySoldier(solider, current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public int getPlayersNumber(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "getPlayersNumber", Ice.OperationMode.Normal, context__);
                int result__ = 0;
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSUnity servant__ = null;
                    try
                    {
                        servant__ = (VSUnity)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    result__ = servant__.getPlayersNumber(current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
                return result__;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public vsm.unity.VSSoldierPrx getSoldier(int playerNumber, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "getSoldier", Ice.OperationMode.Normal, context__);
                vsm.unity.VSSoldierPrx result__ = null;
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSUnity servant__ = null;
                    try
                    {
                        servant__ = (VSUnity)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    result__ = servant__.getSoldier(playerNumber, current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
                return result__;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public vsm.unity.VSSoldierPrx instantiateSoldier(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "instantiateSoldier", Ice.OperationMode.Normal, context__);
                vsm.unity.VSSoldierPrx result__ = null;
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSUnity servant__ = null;
                    try
                    {
                        servant__ = (VSUnity)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    result__ = servant__.instantiateSoldier(current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
                return result__;
            }
        }
    }
}

namespace vsm
{
    namespace unity
    {
    }
}
