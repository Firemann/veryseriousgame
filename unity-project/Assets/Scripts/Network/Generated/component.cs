// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `component.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace vsm
{
    namespace component
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial class VSComponent : vsm.VSObject
        {
            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::vsm::VSObject",
                "::vsm::component::VSComponent"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string ice_id()
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[2];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static new string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Operation dispatch

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void write__(IceInternal.BasicStream os__)
            {
                os__.writeTypeId(ice_staticId());
                os__.startWriteSlice();
                os__.endWriteSlice();
                base.write__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void read__(IceInternal.BasicStream is__, bool rid__)
            {
                if(rid__)
                {
                    /* string myId = */ is__.readTypeId();
                }
                is__.startReadSlice();
                is__.endReadSlice();
                base.read__(is__, true);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void write__(Ice.OutputStream outS__)
            {
                Ice.MarshalException ex = new Ice.MarshalException();
                ex.reason = "type vsm::component::VSComponent was not generated with stream support";
                throw ex;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void read__(Ice.InputStream inS__, bool rid__)
            {
                Ice.MarshalException ex = new Ice.MarshalException();
                ex.reason = "type vsm::component::VSComponent was not generated with stream support";
                throw ex;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1012")]
        public abstract partial class VSTransform : vsm.component.VSComponent, VSTransformOperations_, VSTransformOperationsNC_
        {
            #region Slice operations

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public void translate(vsm.VSVector3 translation)
            {
                translate(translation, Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract void translate(vsm.VSVector3 translation, Ice.Current current__);

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public void rotate(vsm.VSVector3 translation)
            {
                rotate(translation, Ice.ObjectImpl.defaultCurrent);
            }
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public abstract void rotate(vsm.VSVector3 translation, Ice.Current current__);

            #endregion

            #region Slice type-related members

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::vsm::VSObject",
                "::vsm::component::VSComponent",
                "::vsm::component::VSTransform"
            };

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string[] ice_ids()
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string ice_id()
            {
                return ids__[3];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override string ice_id(Ice.Current current__)
            {
                return ids__[3];
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static new string ice_staticId()
            {
                return ids__[3];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus translate___(VSTransform obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.istr();
                is__.startReadEncaps();
                vsm.VSVector3 translation;
                translation = new vsm.VSVector3();
                translation.read__(is__);
                is__.endReadEncaps();
                obj__.translate(translation, current__);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public static Ice.DispatchStatus rotate___(VSTransform obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.istr();
                is__.startReadEncaps();
                vsm.VSVector3 translation;
                translation = new vsm.VSVector3();
                translation.read__(is__);
                is__.endReadEncaps();
                obj__.rotate(translation, current__);
                return Ice.DispatchStatus.DispatchOK;
            }

            private static string[] all__ =
            {
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping",
                "rotate",
                "translate"
            };
            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]

            public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
            {
                int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return ice_id___(this, inS__, current__);
                    }
                    case 1:
                    {
                        return ice_ids___(this, inS__, current__);
                    }
                    case 2:
                    {
                        return ice_isA___(this, inS__, current__);
                    }
                    case 3:
                    {
                        return ice_ping___(this, inS__, current__);
                    }
                    case 4:
                    {
                        return rotate___(this, inS__, current__);
                    }
                    case 5:
                    {
                        return translate___(this, inS__, current__);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            #endregion

            #region Marshaling support

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void write__(IceInternal.BasicStream os__)
            {
                os__.writeTypeId(ice_staticId());
                os__.startWriteSlice();
                os__.endWriteSlice();
                base.write__(os__);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void read__(IceInternal.BasicStream is__, bool rid__)
            {
                if(rid__)
                {
                    /* string myId = */ is__.readTypeId();
                }
                is__.startReadSlice();
                is__.endReadSlice();
                base.read__(is__, true);
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void write__(Ice.OutputStream outS__)
            {
                Ice.MarshalException ex = new Ice.MarshalException();
                ex.reason = "type vsm::component::VSTransform was not generated with stream support";
                throw ex;
            }

            [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
            public override void read__(Ice.InputStream inS__, bool rid__)
            {
                Ice.MarshalException ex = new Ice.MarshalException();
                ex.reason = "type vsm::component::VSTransform was not generated with stream support";
                throw ex;
            }

            #endregion
        }
    }
}

namespace vsm
{
    namespace component
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSTransform_translate();

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public delegate void Callback_VSTransform_rotate();
    }
}

namespace vsm
{
    namespace component
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSComponentPrx : vsm.VSObjectPrx
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSTransformPrx : vsm.component.VSComponentPrx
        {
            void translate(vsm.VSVector3 translation);
            void translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.component.Callback_VSTransform_translate> begin_translate(vsm.VSVector3 translation);
            Ice.AsyncResult<vsm.component.Callback_VSTransform_translate> begin_translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_translate(vsm.VSVector3 translation, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_translate(Ice.AsyncResult r__);

            void rotate(vsm.VSVector3 translation);
            void rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<vsm.component.Callback_VSTransform_rotate> begin_rotate(vsm.VSVector3 translation);
            Ice.AsyncResult<vsm.component.Callback_VSTransform_rotate> begin_rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_rotate(vsm.VSVector3 translation, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            void end_rotate(Ice.AsyncResult r__);
        }
    }
}

namespace vsm
{
    namespace component
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSTransformOperations_
        {
            void translate(vsm.VSVector3 translation, Ice.Current current__);

            void rotate(vsm.VSVector3 translation, Ice.Current current__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSTransformOperationsNC_
        {
            void translate(vsm.VSVector3 translation);

            void rotate(vsm.VSVector3 translation);
        }
    }
}

namespace vsm
{
    namespace component
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSComponentPrxHelper : Ice.ObjectPrxHelperBase, VSComponentPrx
        {
            #region Asynchronous operations

            #endregion

            #region Checked and unchecked cast operations

            public static VSComponentPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                VSComponentPrx r = b as VSComponentPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    VSComponentPrxHelper h = new VSComponentPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSComponentPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                VSComponentPrx r = b as VSComponentPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    VSComponentPrxHelper h = new VSComponentPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSComponentPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        VSComponentPrxHelper h = new VSComponentPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static VSComponentPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        VSComponentPrxHelper h = new VSComponentPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static VSComponentPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                VSComponentPrx r = b as VSComponentPrx;
                if(r == null)
                {
                    VSComponentPrxHelper h = new VSComponentPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSComponentPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                VSComponentPrxHelper h = new VSComponentPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::vsm::VSObject",
                "::vsm::component::VSComponent"
            };

            public static string ice_staticId()
            {
                return ids__[2];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new VSComponentDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new VSComponentDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, VSComponentPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static VSComponentPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    VSComponentPrxHelper result = new VSComponentPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSTransformPrxHelper : Ice.ObjectPrxHelperBase, VSTransformPrx
        {
            #region Synchronous operations

            public void rotate(vsm.VSVector3 translation)
            {
                rotate(translation, null, false);
            }

            public void rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                rotate(translation, context__, true);
            }

            private void rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        VSTransformDel_ del__ = (VSTransformDel_)delBase__;
                        del__.rotate(translation, context__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            public void translate(vsm.VSVector3 translation)
            {
                translate(translation, null, false);
            }

            public void translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                translate(translation, context__, true);
            }

            private void translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
            {
                if(explicitContext__ && context__ == null)
                {
                    context__ = emptyContext_;
                }
                int cnt__ = 0;
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        VSTransformDel_ del__ = (VSTransformDel_)delBase__;
                        del__.translate(translation, context__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__);
                    }
                }
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<vsm.component.Callback_VSTransform_rotate> begin_rotate(vsm.VSVector3 translation)
            {
                return begin_rotate(translation, null, false, null, null);
            }

            public Ice.AsyncResult<vsm.component.Callback_VSTransform_rotate> begin_rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_rotate(translation, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_rotate(vsm.VSVector3 translation, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_rotate(translation, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_rotate(translation, ctx__, true, cb__, cookie__);
            }

            private const string __rotate_name = "rotate";

            public void end_rotate(Ice.AsyncResult r__)
            {
                end__(r__, __rotate_name);
            }

            private Ice.AsyncResult<vsm.component.Callback_VSTransform_rotate> begin_rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<vsm.component.Callback_VSTransform_rotate> result__ = new IceInternal.OnewayOutgoingAsync<vsm.component.Callback_VSTransform_rotate>(this, __rotate_name, rotate_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__rotate_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    translation.write__(os__);
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void rotate_completed__(vsm.component.Callback_VSTransform_rotate cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            public Ice.AsyncResult<vsm.component.Callback_VSTransform_translate> begin_translate(vsm.VSVector3 translation)
            {
                return begin_translate(translation, null, false, null, null);
            }

            public Ice.AsyncResult<vsm.component.Callback_VSTransform_translate> begin_translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_translate(translation, ctx__, true, null, null);
            }

            public Ice.AsyncResult begin_translate(vsm.VSVector3 translation, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_translate(translation, null, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_translate(translation, ctx__, true, cb__, cookie__);
            }

            private const string __translate_name = "translate";

            public void end_translate(Ice.AsyncResult r__)
            {
                end__(r__, __translate_name);
            }

            private Ice.AsyncResult<vsm.component.Callback_VSTransform_translate> begin_translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<vsm.component.Callback_VSTransform_translate> result__ = new IceInternal.OnewayOutgoingAsync<vsm.component.Callback_VSTransform_translate>(this, __translate_name, translate_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare__(__translate_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                    IceInternal.BasicStream os__ = result__.ostr__;
                    translation.write__(os__);
                    os__.endWriteEncaps();
                    result__.send__(true);
                }
                catch(Ice.LocalException ex__)
                {
                    result__.exceptionAsync__(ex__);
                }
                return result__;
            }

            private void translate_completed__(vsm.component.Callback_VSTransform_translate cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            #endregion

            #region Checked and unchecked cast operations

            public static VSTransformPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                VSTransformPrx r = b as VSTransformPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    VSTransformPrxHelper h = new VSTransformPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSTransformPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                VSTransformPrx r = b as VSTransformPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    VSTransformPrxHelper h = new VSTransformPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSTransformPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        VSTransformPrxHelper h = new VSTransformPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static VSTransformPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        VSTransformPrxHelper h = new VSTransformPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static VSTransformPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                VSTransformPrx r = b as VSTransformPrx;
                if(r == null)
                {
                    VSTransformPrxHelper h = new VSTransformPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static VSTransformPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                VSTransformPrxHelper h = new VSTransformPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::vsm::VSObject",
                "::vsm::component::VSComponent",
                "::vsm::component::VSTransform"
            };

            public static string ice_staticId()
            {
                return ids__[3];
            }

            #endregion

            #region Marshaling support

            protected override Ice.ObjectDelM_ createDelegateM__()
            {
                return new VSTransformDelM_();
            }

            protected override Ice.ObjectDelD_ createDelegateD__()
            {
                return new VSTransformDelD_();
            }

            public static void write__(IceInternal.BasicStream os__, VSTransformPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static VSTransformPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    VSTransformPrxHelper result = new VSTransformPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            #endregion
        }
    }
}

namespace vsm
{
    namespace component
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSComponentDel_ : vsm.VSObjectDel_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public interface VSTransformDel_ : vsm.component.VSComponentDel_
        {
            void translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__);

            void rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__);
        }
    }
}

namespace vsm
{
    namespace component
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSComponentDelM_ : Ice.ObjectDelM_, VSComponentDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSTransformDelM_ : Ice.ObjectDelM_, VSTransformDel_
        {
            public void rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("rotate", Ice.OperationMode.Normal, context__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.ostr();
                        translation.write__(os__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(!og__.istr().isEmpty())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.istr().skipEmptyEncaps();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }

            public void translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                IceInternal.Outgoing og__ = handler__.getOutgoing("translate", Ice.OperationMode.Normal, context__);
                try
                {
                    try
                    {
                        IceInternal.BasicStream os__ = og__.ostr();
                        translation.write__(os__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        og__.abort(ex__);
                    }
                    bool ok__ = og__.invoke();
                    if(!og__.istr().isEmpty())
                    {
                        try
                        {
                            if(!ok__)
                            {
                                try
                                {
                                    og__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            og__.istr().skipEmptyEncaps();
                        }
                        catch(Ice.LocalException ex__)
                        {
                            throw new IceInternal.LocalExceptionWrapper(ex__, false);
                        }
                    }
                }
                finally
                {
                    handler__.reclaimOutgoing(og__);
                }
            }
        }
    }
}

namespace vsm
{
    namespace component
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSComponentDelD_ : Ice.ObjectDelD_, VSComponentDel_
        {
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public sealed class VSTransformDelD_ : Ice.ObjectDelD_, VSTransformDel_
        {
            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void rotate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "rotate", Ice.OperationMode.Normal, context__);
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSTransform servant__ = null;
                    try
                    {
                        servant__ = (VSTransform)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    servant__.rotate(translation, current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
            public void translate(vsm.VSVector3 translation, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                Ice.Current current__ = new Ice.Current();
                initCurrent__(ref current__, "translate", Ice.OperationMode.Normal, context__);
                IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
                {
                    VSTransform servant__ = null;
                    try
                    {
                        servant__ = (VSTransform)obj__;
                    }
                    catch(_System.InvalidCastException)
                    {
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }
                    servant__.translate(translation, current__);
                    return Ice.DispatchStatus.DispatchOK;
                };
                IceInternal.Direct direct__ = null;
                try
                {
                    direct__ = new IceInternal.Direct(current__, run__);
                    try
                    {
                        Ice.DispatchStatus status__ = direct__.servant().collocDispatch__(direct__);
                        _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                    }
                    finally
                    {
                        direct__.destroy();
                    }
                }
                catch(Ice.SystemException)
                {
                    throw;
                }
                catch(_System.Exception ex__)
                {
                    IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
                }
            }
        }
    }
}

namespace vsm
{
    namespace component
    {
    }
}
